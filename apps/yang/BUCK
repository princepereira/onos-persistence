COMPILE_DEPS = [
  '//lib:CORE_DEPS',
  '//lib:JACKSON',
  '//core/api:onos-api',
  '//core/common:onos-core-common',
  '//cli:onos-cli',
  '//lib:org.apache.karaf.shell.console',
  '//lib:jackson-core',
  '//lib:onos-yang-model',
  '//lib:onos-yang-compiler-api',
  '//lib:onos-yang-runtime',
  '//lib:onos-yang-serializers-json',
  '//lib:onos-yang-serializers-xml',
  '//lib:onos-yang-serializers-utils',
  '//lib:org.apache.servicemix.bundles.dom4j',
]

BUNDLES = [
  '//lib:onos-yang-model',
  '//lib:onos-yang-compiler-api',
  '//lib:onos-yang-runtime',
  '//lib:onos-yang-serializers-json',
  '//lib:onos-yang-serializers-xml',
  '//lib:onos-yang-serializers-utils',
  '//apps/yang:onos-apps-yang',
  '//apps/yang/web:onos-apps-yang-web',
]

EXCLUDED_BUNDLES = [
  '//lib:org.apache.servicemix.bundles.dom4j',
]

TEST_DEPS = [
  '//lib:TEST_ADAPTERS',
  '//utils/osgi:onlab-osgi-tests',
]

osgi_jar_with_tests(
  deps = COMPILE_DEPS,
  test_deps = TEST_DEPS,
)

onos_app(
  title = 'YANG Compiler and Runtime',
  category = 'Utility',
  url = 'http://onosproject.org',
  description = 'Provides ability to register compiled YANG models or even to compile YANG source ' +
    'files on the fly. Registering YANG models allows other ONOS subsystems to interact with ' +
    'orchestrators or individual network devices using XML or JSON data structured in accordance ' +
    'with those models.',
  included_bundles = BUNDLES,
  excluded_bundles = EXCLUDED_BUNDLES,
)
