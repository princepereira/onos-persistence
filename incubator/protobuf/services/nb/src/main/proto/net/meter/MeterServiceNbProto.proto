/*
 * Copyright 2017-present Open Networking Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
option java_package = "org.onosproject.grpc.nb.net.meter";

package nb.net.meter;

import "net/meter/MeterProto.proto";
import "net/meter/MeterRequestProto.proto";

message submitRequest {
    .net.meter.MeterRequestProto meter = 1;
}

message submitReply {
    .net.meter.MeterProto submit_meter = 1;
}

message withdrawRequest {
    .net.meter.MeterRequestProto meter = 1;
    uint64 meter_id = 2;
}

message withdrawReply {
}

message getMeterRequest {
    string device_id = 1;
    uint64 meter_id = 2;
}

message getMeterReply {
    .net.meter.MeterProto meter = 1;
}

message getAllMetersRequest {
}

message getAllMetersReply {
    repeated .net.meter.MeterProto meters = 1;
}

message getMetersRequest {
    string device_id = 1;
}

message getMetersReply {
    repeated .net.meter.MeterProto meters = 1;
}

service MeterService {
     rpc submit(submitRequest) returns (submitReply) {}
     rpc withdraw(withdrawRequest) returns (withdrawReply) {}
     rpc getMeter(getMeterRequest) returns (getMeterReply) {}
     rpc getAllMeters(getAllMetersRequest) returns (getAllMetersReply) {}
     rpc getMeters(getMetersRequest) returns (getMetersReply) {}
}